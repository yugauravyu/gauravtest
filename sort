private int rstIndex = 0;
public int findKthNumber(int n, int karray) {
    for(int j=0;j<sizeof(karray);j++){
      int k = karray[j];
      int index = 0;
      int ans = -1;
      for (int i = 1; i <= 9; i++) {
          int nextIndex = getIndex(i, n);
          if (index + nextIndex < k) {
              index += nextIndex;
          } else {
              rstIndex = index;
              ans = getAns("" + i, n, k);
              break;
          }
      }
      printf("%d", ans);
      }
}
 
private int getIndex(long curr, int n) {
    int rst = 0;
    int num = 1;
    while (curr <= n) {
        rst += num;
        curr *= 10;
        num *= 10; //10~19, 100 ~199 ...
 
    }
    curr /= 10;
    num /= 10;
    if (n < curr + num - 1) {
        rst -= curr + num - 1 - n;
    }
    return rst;
}
 
private int getAns(String curr, int n, int k) {
    rstIndex++;
    if (rstIndex == k) {
        return Integer.valueOf(curr);
    }
    int ans = -1;
 
    for (int i = 0; i <= 9; i++) {
        int nextIndex = getIndex(Long.valueOf(curr + i), n);
        if (rstIndex + nextIndex < k) {
            rstIndex += nextIndex;
        } else {
            ans = getAns(curr + i, n, k);
            break;
        }
    }
    return ans;
}
